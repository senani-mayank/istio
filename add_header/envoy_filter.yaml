---
# https://medium.com/hepsiburadatech/istio-request-control-with-envoy-filters-request-headers-43dbd0dba7a9
# https://github.com/ibm-cloud-architecture/tutorial-istio-envoy-lua-filters/blob/master/example-1-query/envoy.yaml#L39
# this will fetch add custom header "x-user-domain" after fetching its value from query_param "user_domain"
apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: add-header-filter
  namespace: istio-system
spec:
  workloadSelector:
    labels:
      istio: ingressgateway
  configPatches:
  - applyTo: HTTP_FILTER
    match:
      context: GATEWAY
      listener:
        filterChain:
          filter:
            name: "envoy.http_connection_manager"
            subFilter:
              name: "envoy.router"
    patch:
      operation: INSERT_BEFORE
      value:
       name: envoy.lua
       typed_config:
         "@type": "type.googleapis.com/envoy.config.filter.http.lua.v2.Lua"
         inlineCode: |
            function envoy_on_request(request_handle)
              function urldecode(s)
                s = s:gsub('+', ' ')
                    :gsub('%%(%x%x)', function(h)
                                        return string.char(tonumber(h, 16))
                                      end)
                return s
              end
              function parseurl(s)
                local ans = {}
                for k,v in s:gmatch('([^&=?]-)=([^&=?]+)' ) do
                  ans[ k ] = urldecode(v)
                end
                return ans
              end
              local headers = request_handle:headers()
              local path = headers:get(":path")
              local method = headers:get(":method")
              local query_params = parseurl(path)
              if query_params["user_domain"] ~= nil and method == "GET" then
                request_handle:headers():replace("x-user-domain",query_params["user_domain"])
              end
            end

